---
// Modules
import clsx from 'clsx';
import { twMerge } from 'tailwind-merge';

// Components

function firstConcat (isOdd:boolean) {
  return twMerge(clsx('h-96 p-6 md:px-12 flex flex-col justify-center', (isOdd) ? 'md:order-1 bg-neutral-800 text-white' : 'md:order-2 bg-white text-neutral-800'));
}

function secondConcat (isOdd:boolean, classImage:string) {
  return twMerge(clsx('bg-image min-h-96', classImage, (!isOdd) ? 'md:order-1' : 'md:order-2'));
}

type Props = {
  sectionRows:SectionRow[];
}

export type SectionRow = {
	classImage:string;
	title:string;
	subtitle:string;
	description:string;
}

const { sectionRows } = Astro.props;

---

<style>

	.first-row-image {
		background-image: url('/images/screens/home/img2.jpg');
	}

	.second-row-image {
		background-image: url('/images/screens/home/img3.jpg');
	}

	.third-row-image {
		background-image: url('/images/screens/home/img4.jpg');
	}

</style>

<section class='flex flex-col'>

  {sectionRows.map((row, key) => (

    <div class='flex flex-col md:grid grid-cols-2'>

      <div class={firstConcat(key % 2 !== 0)}>

        <div class="flex flex-col gap-1">

          <div class="flex flex-col">
          
            <h4 class="text-sm">{row.subtitle}</h4>

            <h3 class="text-2xl font-semibold">{row.title}</h3>

          </div>

          <p>{row.description}</p>

        </div>
        
      </div>

      <div class={secondConcat((key % 2 !== 0), row.classImage)}></div>

    </div>
    
  ))}

</section>